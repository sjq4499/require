{"version":3,"sources":["store/list/list.action.js","views/home/components/order/components/selectedBox.js","views/home/components/order/index.js"],"names":["getlistdata","order","dispatch","request","get","then","res","type","GET_LIST_DATA","data","filterTable","FILTER_LIST_DATA","RangePicker","Option","Selected","submit","_this$props","_this","props","validateFields","form","err","alert","getFieldDecorator","this","react_default","a","createElement","es_form","layout","Item","label","initialValue","help","required","validateStatus","input_number","min","max","es_radio","Group","buttonStyle","Button","value","handleStateData","map","item","key","es_select","style","width","disabled","serviceName","es_button","onClick","React","Component","create","Order","state","page","defaultPageSize","showTotal","curdata","padding","selectedBox","table","columns","orderCol","dataSource","scroll","x","pagination","_this2","getOrderId","location","pathname","history","listen","method","changename","ordername","connect","Object","objectSpread","list","bindActionCreators","listAction"],"mappings":"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","file":"static/js/10.f1ee7b58.chunk.js","sourcesContent":["import request from '@/utils/request'\r\nimport {\r\n    GET_LIST_DATA,\r\n    FILTER_LIST_DATA\r\n} from '../action.type'\r\nexport const getlistdata = (order)=>{\r\n    return dispatch=>{\r\n        request.get('/api/list',{\r\n            order\r\n        }).then(res=>{\r\n            dispatch({\r\n                type:GET_LIST_DATA,\r\n                data:res.data\r\n            })\r\n        })\r\n    }\r\n}\r\n\r\nexport const filterTable = (data)=>{\r\n    return {\r\n        type:FILTER_LIST_DATA,\r\n        data\r\n    }\r\n}","import React from 'react';\r\nimport {\r\n    Form,\r\n    DatePicker,\r\n    InputNumber,\r\n    Radio,\r\n    Select,\r\n    Button\r\n} from 'antd';\r\nimport {handleStateData,type,serviceName} from '@/mock/orderCol'\r\nconst { RangePicker } = DatePicker;\r\nconst {Option} = Select;\r\nclass Selected extends React.Component{\r\n    render(){\r\n        let {getFieldDecorator} = this.props.form;\r\n        return <Form\r\n            layout=\"inline\"\r\n        > \r\n            <Form.Item label={'处理时间'}>\r\n                {\r\n                    getFieldDecorator('time',{\r\n                        initialValue:[]\r\n                    })(\r\n                        <RangePicker />\r\n                    )\r\n                }\r\n            </Form.Item>\r\n            <Form.Item \r\n                label={'金额范围'}\r\n                help=\"\"\r\n                required={false}\r\n                validateStatus=\"\"\r\n            >\r\n                {\r\n                    getFieldDecorator('minMoney',{\r\n                        initialValue:1\r\n                    })(\r\n                        <InputNumber min={1} max={20} />\r\n                    )\r\n                }\r\n                &nbsp;&nbsp;-&nbsp;&nbsp;\r\n                {\r\n                    getFieldDecorator('maxMoney',{\r\n                        initialValue:20\r\n                    })(\r\n                        <InputNumber  min={1} max={20} />\r\n                    )\r\n                }\r\n                \r\n            </Form.Item>\r\n            <Form.Item label={'处理状态'}>\r\n                {\r\n                    getFieldDecorator('handleState',{\r\n                        initialValue:\"default\"\r\n                    })(\r\n                        <Radio.Group buttonStyle=\"solid\">\r\n                            <Radio.Button value=\"default\">全部</Radio.Button>\r\n                            {\r\n                                handleStateData.map((item,key)=> <Radio.Button value={item} key={key}>{item}</Radio.Button>)\r\n                            }\r\n                        </Radio.Group>  \r\n                    )\r\n                }\r\n            </Form.Item>\r\n            <Form.Item label={'转单类型'}>\r\n                {\r\n                    getFieldDecorator('type',{\r\n                        initialValue:\"default\"\r\n                    })(\r\n                        <Select style={{ width: 120 }} >\r\n                            <Option value={\"default\"} disabled={true}>请选择类型</Option>\r\n                            {\r\n                                type.map((item,key)=><Option value={item} key={key}>{item}</Option>)\r\n                            }\r\n                        </Select>\r\n                    )\r\n                }\r\n                \r\n            </Form.Item>\r\n            <Form.Item label={'客服名称'}>\r\n                {\r\n                    getFieldDecorator('serviceName',{\r\n                        initialValue:\"default\"\r\n                    })(\r\n                        <Select style={{ width: 120 }} >\r\n                            <Option value={'default'} disabled={true}>请选择客服</Option>\r\n                            {\r\n                                serviceName.map((item,key)=><Option value={item} key={key}>{item}</Option>)\r\n                            }\r\n                        </Select>\r\n                    )\r\n                }\r\n                \r\n            </Form.Item>\r\n            <Button type=\"primary\" onClick={this.submit}>查询</Button>\r\n        </Form>\r\n    }\r\n    submit=()=>{\r\n        let {filterTable,form:{validateFields}} = this.props;\r\n        validateFields((err,data)=>{\r\n            if(err){\r\n                alert(err)\r\n                return;\r\n            }\r\n            filterTable(data);\r\n        })\r\n    }\r\n}\r\n\r\nSelected = Form.create()(Selected);\r\n\r\nexport default Selected;","import React, { Component } from 'react'\r\nimport {connect} from 'react-redux'\r\nimport {bindActionCreators} from 'redux'\r\nimport * as listAction from '@/store/list/list.action'\r\nimport { \r\n    Table\r\n} from 'antd';\r\nimport orderCol from '@/mock/orderCol'\r\nimport SelectBox from './components/selectedBox';\r\n\r\nclass Order extends Component {\r\n    state = {\r\n        page:{\r\n            defaultPageSize:5,\r\n            showTotal:(a)=>{\r\n                return '共'+a+'条'\r\n            }\r\n        }\r\n    }\r\n    render() {\r\n        let {curdata} = this.props;\r\n        let {page} = this.state;\r\n        return (\r\n            <div>\r\n                <div style={{\r\n                    padding:10\r\n                }}>\r\n                   <SelectBox filterTable={this.filterTable}/> \r\n                </div>\r\n                <div style={{\r\n                    padding:10\r\n                }}>\r\n                    <Table columns={orderCol} dataSource={curdata} scroll={{ x: 1300 }} pagination={page} />\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n    componentDidMount(){  \r\n        this.props.getlistdata(this.getOrderId(this.props.location.pathname));\r\n        this.props.history.listen((location,method)=>{  //路由变化得时候执行\r\n            //location地址信息,method路由跳转方式\r\n            let changename = this.getOrderId(location.pathname);\r\n            changename && this.props.getlistdata(changename);\r\n        })\r\n    }\r\n    // componentWillReceiveProps(nextProps){\r\n    //     let nextOrder = nextProps.match.params.ordername;\r\n    //     let curOrder = this.props.match.params.ordername;\r\n    //     (nextOrder!==curOrder) && this.props.getlistdata(this.getOrderId(nextOrder));\r\n    // }\r\n    getOrderId(ordername){\r\n        switch(ordername){\r\n            case '/home/order/dk':\r\n                return 1;\r\n            case '/home/order/zd':\r\n                return 2;\r\n            case '/home/order/bx':\r\n                return 3\r\n            default :\r\n                return false\r\n        }\r\n    }\r\n    filterTable = (data)=>{\r\n        this.props.filterTable(data);\r\n    }\r\n}\r\n\r\n\r\nexport default connect(\r\n    state=>({\r\n        ...state.list\r\n    }),\r\n    dispatch=>bindActionCreators(listAction,dispatch)\r\n)(Order);"],"sourceRoot":""}